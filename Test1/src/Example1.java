public class Example1 {//클래스명은 띄어쓰기 사용하지 말기! 에러 남
    public static void main(String[] args) {
        System.out.println("예제1");

        //문자  타입 예제

        byte a = 1;
        //byte타임의 크기(1바이트)만큼 메모리를 할당하고 주소를 a라고 부른다.
       //a위치에 숫자 1을 저장한다.
       byte b=2; //변수 이름은 띄어쓰기를 사용하면 에러가 나서 별도로 _를 사용해야된다.
        b=3; // b라는 변수의 값에 기존에 할당받은 메모리 위체인 b자리에 3을 덮어씌우는 코드(데이터 타입 사용x)
        int c= a + b; // 연산장치는 띄어쓰기를 해도된다.


        System.out.println(c);

        //문자 타입 예제

        char ch1='A'; //문자형 데이터 타입(2바이트)만큼 메모리를 할당하고 주소 ch1이라고 부르고 문자 A를 저장한다
        char ch2='B';//char형은 문자 하나를 표현할때는 단 따옴표('') 사용 여러문자는 ""사용
        System.out.println(ch1);
        System.out.println(ch2);
        System.out.println(ch1+ch2);
        //문자열에 산술연산자를 사용 시, 값을 숫자로 변환하여(유니코드 표 상에 숫자로 전환이 되어있어서 해당 표에 맞는 숫자로 인식) +수행
        // 유니코드 상에는 합쳐진 값에 대한 코드가 없기 때문에 숫자로 변환하는 것이다.
        System.out.println(""+ ch1+ch2);
        //꼼수(자바의 동작 방식이 숫자화하는 것인데 만약 방법을 못 찾을 경우 차선책으로 문자로 인식)
        // ""-> 아무것도 없는 문자(값)도 컴퓨터에서 존재하는것으로 인식/ 빈문자열이 포함되면서 숫자가 아닌 문자로 더함
        // 그러면 문장 자체를 문자로 인식하여 문자로 순서대로 나열

        System.out.println(ch1); //출력하면 'A' 나옴
        System.out.println(+ch1);//유니코드 65 출력(앞에 +를 사용하여 숫자로 변환하는 기능 사용)
        // 즉 컴퓨터는 값을 숫자랑 문자로 표현이 가능하다 다만, 방법에 차이가 있다 ( 타입 변환이라고 칭한다.)
        System.out.println(+ch1+ +ch2); //명시적으로 131를 유도하는 것
        String username="서형원"; // 문자가 여러개 모인것 ->문자열 지정, 대문자 S사용(언어마다 대소문자 구분 여부 상이)
        System.out.println(username);// 문자열은 데이터타입을 char 대신 String을 사용 / 매번 바이트가 크기에 따라 상이(가변형 데이터 타입)

        //boolean 타입 예제
        boolean bool= true;// true(참) 아니면 false(거짓)로 작성 -> 문자, 문자열, 숫자가 아니다!!! ""도 필요 없음(예약어/키워드)
        //자바는 참은 1, 거짓은 0은 인식하지 않음
        System.out.println(bool);


    }
}
